{"version":3,"sources":["data/HeaderData.tsx","common/Hamburger.tsx","common/Header.tsx","data/IconData.tsx","common/Footer.tsx","layouts/Main.tsx","App.tsx","data/AboutCellData.tsx","components/AboutCell.tsx","components/About.tsx","components/Resume.tsx","data/LegendData.tsx","components/Legend.tsx","data/MapData.tsx","data/CountryImageData.tsx","components/Map.tsx","components/Travel.tsx","components/NotFound.tsx","serviceWorker.ts","index.tsx","static/img/Profile_Pic.png"],"names":["headers","url","text","Hamburger","useState","open","setOpen","className","id","onClick","slide","right","isOpen","routes","map","h","key","to","Header","React","Component","icons","link","label","icon","faGithub","faLinkedinIn","faEnvelope","Footer","src","ProfilePic","alt","href","i","Main","window","scrollTo","top","left","behavior","titleTemplate","defaultTitle","this","props","children","App","aboutCellData","title","subtitle","image","process","AboutCell","About","data","info","Resume","legendData","color","Legend","legendKeys","legendKey","style","backgroundColor","fillLayer","fromJS","source","type","interactive","paint","defaultMapStyle","MAP_STYLE","generateMapStyle","setIn","set","get","push","countryImageMap","USA","THA","KHM","VNM","initialState","modal","mapStyle","mapData","hoveredFeature","clickedFeature","x","y","viewport","height","width","latitude","longitude","zoom","Map","state","event","features","find","f","setState","isCountryWithPictures","toggle","properties","onHover","srcEvent","offsetX","offsetY","renderTooltip","name","setMapLayers","json","error","prevState","mapboxApiAccessToken","onLoad","onViewportChange","Modal","centered","zIndex","ModalHeader","country","ModalBody","items","imageData","showFullscreenButton","showPlayButton","Travel","PageNotFound","Boolean","location","hostname","match","ReactDOM","render","exact","path","component","NotFound","status","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.41fc0816.chunk.js","sourcesContent":["type HeaderInfo = {\n    url : string,\n    text: string\n}\n\nconst headers: Array<HeaderInfo> = [\n    {\n        url: \"about\",\n        text: 'About'\n    },\n    {\n        url: \"resume\",\n        text: 'Resume'\n    },\n  ];\n  \n  export default headers;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Menu from 'react-burger-menu';\n\nimport routes from '../data/HeaderData';\n\nconst Hamburger:React.FC = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className=\"hamburger-container\">\n      <nav className=\"main\" id=\"hambuger-nav\">\n        <ul>\n          {open ? (\n            <li className=\"menu close-menu\">\n              <div onClick={() => setOpen(!open)} className=\"menu-hover\">&#10005;</div>\n            </li>\n          ) : (\n            <li className=\"menu open-menu\">\n              <div onClick={() => setOpen(!open)} className=\"menu-hover\">&#9776;</div>\n            </li>\n          )}\n        </ul>\n      </nav>\n      <Menu.slide right isOpen={open}>\n        <ul className=\"hamburger-ul\">\n          {routes.map(h => (\n            <li key={h.text}>\n              <Link to={h.url} onClick={() => setOpen(!open)}>\n                <h3 className='index-li'>{h.text}</h3>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </Menu.slide>\n    </div>\n  );\n};\n\nexport default Hamburger;","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport headers from '../data/HeaderData';\nimport Hamburger from './Hamburger';\n\nclass Header extends React.Component {\n  render() {  \n    return (\n      <header id=\"header\">\n        <h1 className=\"index-link\">\n          <Link to=\"\">Michael Ross</Link>\n        </h1>\n      <nav className=\"links\">\n        <ul>\n        {headers.map(h => (\n          <li key={h.text}>\n            <Link to={h.url}>{h.text}</Link>\n          </li>\n        ))}\n        </ul>\n      </nav>\n      <Hamburger />\n    </header>\n      );\n    }\n  }\n\nexport default Header;\n","import faGithub from '@fortawesome/fontawesome-free-brands/faGithub';\nimport faLinkedinIn from '@fortawesome/fontawesome-free-brands/faLinkedinIn';\nimport faEnvelope from '@fortawesome/fontawesome-free-regular/faEnvelope';\n\ntype Icon = {\n    link : string,\n    label: string,\n    icon: any\n}\n\nconst icons: Array<Icon> = [\n  {\n    link: 'https://github.com/MikeDRoss',\n    label: 'Github',\n    icon: faGithub,\n  },\n  {\n    link: 'https://www.linkedin.com/in/michael-ross-0067a0b5',\n    label: 'LinkedIn',\n    icon: faLinkedinIn,\n  },\n  {\n    link: 'mailto:michael4725@gmail.com',\n    label: 'Email',\n    icon: faEnvelope,\n  },\n];\n\nexport default icons;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ProfilePic from '../static/img/Profile_Pic.png'\nimport icons from '../data/IconData'\n\nconst Footer:React.FC = () => (\n    <section id=\"sidebar\">\n      <section id=\"intro\">\n        <Link to=\"/\" className=\"logo\">\n          <img src={ProfilePic} alt=\"\" />\n        </Link>\n        <header>\n          <h2>Michael Ross</h2>\n          <p><a href=\"mailto:michael4725@gmail.com\">michael4725@gmail.com</a></p>\n        </header>\n      </section>\n  \n      <section className=\"blurb\">\n        <h2>About</h2>\n        <p>Hi, I&apos;m Michael. I&apos;m a Senior Software Engineer at Capital One with extensive experience building scalable backend systems on the public cloud, provisioning the infrastructure these systems run on, and everything in between.\n        </p>\n        <ul className=\"actions\">\n          <li>\n            <Link to=\"/resume\" className=\"button\">Learn More</Link> : <Link to=\"/about\" className=\"button\">About Me</Link>\n          </li>\n        </ul>\n      </section>\n  \n      <section id=\"footer\">\n        <ul className=\"icons\">\n          {icons.map(i => (\n            <li key={i.label}><a href={i.link}><FontAwesomeIcon icon={i.icon} /></a></li>\n          ))}\n        </ul>\n        <p className=\"copyright\">&copy; Michael Ross <Link to=\"/\">mikedross.github.io</Link></p>\n      </section>\n    </section>\n  );\n  \n  export default Footer;","import React, { Component, ReactNode } from 'react';\nimport Helmet from 'react-helmet';\nimport Header from '../common/Header'\nimport Footer from '../common/Footer'\n\ntype Props = {\n    children: ReactNode\n}\n\nclass Main extends Component<Props> {\n\n  // TODO: Update this lifecycle method to remove warning from console\n  componentWillMount() {\n    window.scrollTo({\n      top:0,\n      left: 0,\n      behavior: 'smooth'\n    })\n  }\n\n\n  render () {\n    return (\n          <div id=\"wrapper\">\n            <Helmet titleTemplate=\"%s | Michael Ross\" defaultTitle=\"Michael Ross\" />\n            <Header />\n            <div id=\"main\">\n              {this.props.children}\n            </div>\n            <Footer />\n          </div>\n    );\n  }\n}\n\nexport default Main;","import React from 'react';\nimport { Link } from 'react-router-dom';\n//import logo from './logo.svg';\nimport Main from './layouts/Main'\n\nconst App:React.FC = () => (\n  \n    <Main>\n      <article className=\"post\" id=\"index\">\n      <header>\n        <div className=\"title\">\n          <h2><Link to=\"/\">Welcome</Link></h2>\n          <p>I used this website as an opportunity to teach myself modern web development. Feel free to look around!</p>\n          <p><a href=\"https://github.com/MikeDRoss/personal-website\">source code</a></p>\n        </div>\n      </header>      \n    </article>\n    </Main>\n  \n);\n\nexport default App;\n","export type AboutCellDataType = {\n    title: string,\n    subtitle: string,\n    image: string,\n    link: string\n}\n\n\nconst aboutCellData: Array<AboutCellDataType> = [\n    {\n      title: 'Hobbies',\n      subtitle: 'What I do in my free time',\n      image: '/hobbies.png',\n      link: process.env.PUBLIC_URL\n    }, {\n      title: 'Travel',\n      subtitle: 'Lets see where ive been',\n      image: '/travel.png',\n      link: 'travel'\n    }\n]\n\n\nexport default aboutCellData;","import React from 'react';\nimport { AboutCellDataType } from '../data/AboutCellData'\nimport { Link } from 'react-router-dom';\n\nconst AboutCell = ( {aboutCellData } : {aboutCellData: AboutCellDataType}) => (\n  \n  <div className=\"cell-container\">\n    <article className=\"mini-post\">\n      <header>\n        <h3>{aboutCellData.title}</h3>\n      </header>\n      <Link to={aboutCellData.link} className=\"image\"><img src={process.env.PUBLIC_URL + aboutCellData.image} alt=\"\" /></Link>\n      <div className=\"description\">\n        <p>{aboutCellData.subtitle}</p>\n      </div>\n    </article>\n  </div>\n);\n\nexport default AboutCell;\n","import React from 'react';\nimport Main from '../layouts/Main'\nimport Helmet from 'react-helmet'\nimport { Link } from 'react-router-dom';\nimport data from '../data/AboutCellData';\nimport AboutCell from './AboutCell'\n\nconst About:React.FC = () => (\n    <Main>\n    <Helmet title=\"About\" />\n    <article className=\"post\" id=\"about-sections\">\n      <header>\n        <div className=\"title\">\n          <h2><Link to=\"/about\">About Me</Link></h2>\n          <p>For information on my professional background, check out my <a href='https://www.linkedin.com/in/michael-ross-0067a0b5'>LinkedIn</a>.</p>\n          <p>Here is some info you won't find on my resume!</p>\n        </div>\n      </header>\n      {data.map(info => (\n        <AboutCell\n          key={info.title}\n          aboutCellData={info}\n        />\n      ))}\n    </article>\n  </Main>\n);\n\nexport default About;\n","import React from 'react';\nimport Main from '../layouts/Main'\nimport Helmet from 'react-helmet'\nimport '../static/css/resume_style.scss';\n\n\nconst Resume:React.FC = () => (\n  <Main>\n    <Helmet title=\"Resume\" />\n    <article className=\"post\" id=\"resume\">\n\t\t<section className=\"top\">\n\t\t\t<div className=\"uppercase name\">\n\t\t\t\tMichael Ross\n\t\t\t</div>\n\t\t\t<div className=\"uppercase role\">Full Stack Software Engineer</div>\n\t\t\t<div>\n\t\t\t\t<ul className=\"contact\">\n\t\t\t\t\t<li><a href=\"mailto:michael4725@gmail.com\">michael4725@gmail.com</a></li>\n\t\t\t\t\t<li><a href=\"tel:2023520365\">(202) 352-0365</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</section>\n\n\t\t<section className=\"middle\">\n\t\t\t<div id=\"work\">\n\t\t\t\t<div className=\"header\">Professional Experience</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"job\">Capital One, Senior Software Engineer<span className=\"year\">[01-2018] - Present</span></div>\n\t\t\t\t\t<ul className=\"custom-bullet\">\n\t\t\t\t\t\t<li>Designed and delivered the Retail Bank's Address Book. This system listens and stores account information for the contacts that customers pay in order to build out a custom contact list for customers across all payment rails i.e. Zhelle, Wire Transfers, Billpay, etc..</li>\n\t\t\t\t\t\t<li>Pioneered use of choreographer design pattern to decouple rails by designing an event driven architecture</li>\n\t\t\t\t\t\t<li>Led discussions as a devops SME to consolidate deployments of dockerized applications to a shared ECS cluster across 14 agile teams</li>\n\t\t\t\t\t\t<li>Led effort to publish fraudulent external account linking attempts to a kafka cluster for both fraud/operations analysis and real time fraud decisioning for customers attempting ACH transfers. This has led to saving 800k/year in fraud losses</li>\n\t\t\t\t\t\t<li>Designed and developed a stateless ecosystem of microservices that enabled Capital One Retail locations to print debit cards at the time of account opening</li>\n\t\t\t\t\t\t<li>Conduct interviews for potential candidates at the Senior/Principle Software Developer level.</li>\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t<div className=\"job\">Capital One, Associate Software Developer<span className=\"year\">[07-2016] - [01-2018]</span></div>\n\t\t\t\t\t<ul className=\"custom-bullet\">\n\t\t\t\t\t\t<li>Singlehandedly designed and developed a CICD pipeline for Retail Bank's Digital Debit Card offering. This pipeline included push button deployments of an ECS cluster, dockerized applications with blue/green 0 downtime deployments, new relic apm monitoring, and filebeat log forwarding to a centrailzed ELK stack.</li>\n\t\t\t\t\t\t<li>Led comprehensive effort to update Capital One's ATM system of record from an excel spreadsheet to a RESTful ecosystem of serverless AWS Lambda Functions backed by a Postgresql DB.</li>\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t<div className=\"job\">IBM, Mobile Development Intern<span className=\"year\">[05-2015] - [08-2015]</span></div>\n\t\t\t\t\t<ul className=\"custom-bullet\">\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div className=\"job\">Energage, Web Development Intern<span className=\"year\">[05-2014] - [08-2014]</span></div>\n\t\t\t\t\t<ul className=\"custom-bullet\">\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div> \n\n\t\t\t<div id=\"work\">\n\t\t\t\t<div className=\"header\">Volunteering Experience</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"job\">Capital One CODERS<span className=\"year\">[03-2017] - Present</span></div>\n\t\t\t\t\t<ul className=\"custom-bullet\">\n\t\t\t\t\t\t<li>Capital One sponsored program to introduce middle school students to technology and foster a focus in software engineering.</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"skills\">\n\t\t\t\t<div className=\"header\">Skills</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<ul className=\"skills-list\">\n\t\t\t\t\t\t<li>AWS</li>\n\t\t\t\t\t\t<li>Java</li>\n\t\t\t\t\t\t<li>Spring Boot</li>\n\t\t\t\t\t\t<li>Devops</li>\n\t\t\t\t\t\t<li>ECS</li>\n\t\t\t\t\t\t<li>Kafka</li>\n\t\t\t\t\t\t<li>Jenkins</li>\n\t\t\t\t\t\t<li>REST</li>\n\t\t\t\t\t\t<li>Aurora RDS</li>\n\t\t\t\t\t\t<li>Cucumber Testing</li>\n\t\t\t\t\t\t<li>Docker</li>\n\t\t\t\t\t\t<li>GCP</li>\n\t\t\t\t\t\t<li>CQRS</li>\n\t\t\t\t\t\t<li>Microservices</li>\n\t\t\t\t\t\t<li>Bash Scripting</li>\n\t\t\t\t\t\t<li>Git</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"split-pane\">\n\t\t\t\t<div id=\"education\">\n\t\t\t\t\t<div className=\"header\">Education</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"img-with-text\">\n\t\t\t\t\t\t\t<div id=\"psu\" className=\"img-round border\"></div>\n\t\t\t\t\t\t\t<ul><span className=\"job\">The Pennsylvania State University</span>\n\t\t\t\t\t\t\t\t<li>[08-2012] - [05-2016]</li>\n                                <li>B.S. Computer Science</li>\n\t\t\t\t\t\t\t\t<li>Minor: Mathematics</li>\n\t\t\t\t\t\t\t\t<li>Major GPA: 3.77/4.0</li>\n\t\t\t\t\t\t\t\t<li>Cum GPA: 3.57/4.0</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"education\">\n\t\t\t\t\t<div className=\"header\">Certifications</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"img-with-text\">\n\t\t\t\t\t\t\t<div id=\"aws\" className=\"img-square border\"></div>\n\t\t\t\t\t\t\t<ul className=\"padding-top: 10px;\">\n\t\t\t\t\t\t\t\t<li>AWS Certified Solutions Architect - Associate</li>\n\t\t\t\t\t\t\t\t<li>AWS Certified Developer - Associate</li>\n\t\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<footer></footer>\n\n\t\t</section>\n\n\n\n    </article>\n  </Main>\n);\n\nexport default Resume;","export type LegendType = {\n    key: string,\n    color: string\n}\n\n\nconst legendData: Array<LegendType> = [\n    {\n      key: 'visited',\n      color: '#008000'\n    }, {\n      key: 'wishlist',\n      color: '#FFD700'\n    }\n]\n\n\nexport default legendData;","import React from 'react';\nimport legendKeys from '../data/LegendData';\n\nconst Legend:React.FC = () => (\n    <div className='map-overlay' id='legend'>\n        {legendKeys.map(legendKey => ([\n            <div key={legendKey.key}>\n                <span className='legend-key' style={{backgroundColor: legendKey.color}}></span>\n                <span>{legendKey.key}</span>\n            </div>\n        ])\n        )}\n    </div>\n);\n\nexport default Legend;","import MAP_STYLE from '../data/map-style-basic-v8.json';\nimport {fromJS} from 'immutable';\n\nconst fillLayer = fromJS({\n    id: 'source',\n    source: 'countryLayer',\n    type: 'fill',\n    interactive: true,\n    paint: {\n      'fill-color': '#008000',\n      'fill-outline-color': '#000000',\n      'fill-opacity': 0.3\n    }\n  });\n\nexport const defaultMapStyle = fromJS(MAP_STYLE);\n\nexport const generateMapStyle = (data: any) => defaultMapStyle\n    .setIn(['sources', 'countryLayer'], fromJS({\n        type: 'geojson',\n        data\n    }))\n    .set('layers', defaultMapStyle.get('layers').push(fillLayer));    ","const countryImageMap: any = \n{\n     USA: \n     {\n        \"country\" : \"United States\",\n        \"imageData\" : [\n        {\n            \"original\": process.env.PUBLIC_URL + \"/travel.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/travel.png\"\n        },\n        {\n            \"original\": process.env.PUBLIC_URL + \"/hobbies.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/hobbies.png\"\n        }\n        ]\n    },\n    THA: \n    {\n        \"country\" : \"Thailand\",\n        \"imageData\" : [\n        {\n            \"original\": process.env.PUBLIC_URL + \"/img/thailand/thailand_0.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/img/thailand/thailand_0.png\"\n        },\n        {\n            \"original\": process.env.PUBLIC_URL + \"/img/thailand/thailand_1.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/img/thailand/thailand_1.png\"\n        },\n        {\n            \"original\": process.env.PUBLIC_URL + \"/img/thailand/thailand_2.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/img/thailand/thailand_2.png\"\n        },\n        {\n            \"original\": process.env.PUBLIC_URL + \"/img/thailand/thailand_3.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/img/thailand/thailand_3.png\"\n        }\n        ]\n    },\n    KHM:\n    {\n        \"country\" : \"Cambodia\",\n        \"imageData\" : [\n        {\n            \"original\": process.env.PUBLIC_URL + \"/img/cambodia/cambodia_0.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/img/cambodia/cambodia_0.png\"\n        },\n        {\n            \"original\": process.env.PUBLIC_URL + \"/img/cambodia/cambodia_1.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/img/cambodia/cambodia_1.png\"\n        }\n        ]\n    },\n    VNM:\n    {\n        \"country\" : \"Vietnam\",\n        \"imageData\" : [\n        {\n            \"original\": process.env.PUBLIC_URL + \"/img/vietnam/vietnam_0.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/img/vietnam/vietnam_0.png\"\n        },\n        {\n            \"original\": process.env.PUBLIC_URL + \"/img/vietnam/vietnam_1.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/img/vietnam/vietnam_1.png\"\n        },\n        {\n            \"original\": process.env.PUBLIC_URL + \"/img/vietnam/vietnam_2.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/img/vietnam/vietnam_2.png\"\n        },\n        {\n            \"original\": process.env.PUBLIC_URL + \"/img/vietnam/vietnam_3.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/img/vietnam/vietnam_3.png\"\n        },\n        {\n            \"original\": process.env.PUBLIC_URL + \"/img/vietnam/vietnam_4.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/img/vietnam/vietnam_4.png\"\n        },\n        {\n            \"original\": process.env.PUBLIC_URL + \"/img/vietnam/vietnam_5.png\",\n            \"thumbnail\": process.env.PUBLIC_URL + \"/img/vietnam/vietnam_5.png\"\n        }\n        ]\n    }\n};\n\nexport default countryImageMap;","import React from 'react';\nimport ReactMapGL from 'react-map-gl';\nimport Legend from './Legend'\nimport {json} from 'd3-request';\nimport {defaultMapStyle, generateMapStyle} from '../data/MapData'\nimport countryImageMap from '../data/CountryImageData'\n// Without this import, the console displays a 'missing CSS declaration' warning\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport ImageGallery from 'react-image-gallery';\n\n\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_TOKEN || '';\n\nconst initialState = {\n    modal: false,\n    mapStyle: defaultMapStyle,\n    mapData: null,\n    hoveredFeature: null,\n    clickedFeature: null,\n    x: 0,\n    y: 0,\n    viewport: {\n        height:600,\n        width:'100%',\n        latitude: 30,\n        longitude: 0,\n        zoom: 1.2\n    }\n};\n\n\ntype State = typeof initialState;\ntype Viewport = typeof initialState.viewport;\n\nexport default class Map extends React.Component<{}, State> {\n    public state: State = initialState;\n\n    public onClick = (event:any) => {\n        const {\n            features\n        } = event;\n        const clickedFeature = features && features.find((f:any) => f.source === 'countryLayer');\n\n        this.setState({clickedFeature});\n        if(this.isCountryWithPictures()) {\n            this.toggle()\n        }\n    }\n\n    private isCountryWithPictures = () => {\n        return this.state.clickedFeature && countryImageMap[(this.state.clickedFeature as any).properties.id]\n    }\n\n    public onHover = (event:any) => {\n        const {\n            features,\n            srcEvent: {offsetX, offsetY}\n        } = event;\n        const hoveredFeature = features && features.find((f:any) => f.source === 'countryLayer');\n\n        this.setState({hoveredFeature, x: offsetX, y: offsetY});\n    };\n\n    public renderTooltip = () => {\n        const {hoveredFeature, x, y} = this.state;\n\n        return (\n            hoveredFeature && (\n            <div className=\"tooltip\" style={{left: x, top: y}}>\n                <div>{(hoveredFeature as any).properties.name}</div>\n            </div>\n            )\n        );\n    }\n\n\n    public setMapLayers = () => {\n        json(process.env.PUBLIC_URL + '/map-data.geojson', (error, mapData : any) => {\n            if(!error) {\n                this.setState({mapStyle:generateMapStyle(mapData), mapData});\n            }\n        });\n    }\n\n    public toggle = () => {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    public render() {\n        const { viewport, mapStyle, clickedFeature } = this.state;\n      \n        return (\n            <div>\n                <ReactMapGL\n                    {...viewport}\n                    mapStyle={mapStyle}\n                    mapboxApiAccessToken={MAPBOX_TOKEN}\n                    onLoad={() => this.setMapLayers()}\n                    onViewportChange={(viewport:any )=> this.setState({ viewport })}\n                    onHover={this.onHover}\n                    onClick={this.onClick}\n                >\n                    {this.renderTooltip()}\n                    <Legend />\n                </ReactMapGL>\n\n                {/*TODO: This needs to be refactored..*/}\n                {this.isCountryWithPictures() && \n                <Modal isOpen={this.state.modal} toggle={this.toggle} className='modal-lg' centered={true} zIndex={1000000} >\n                    <ModalHeader toggle={this.toggle}>{countryImageMap[(clickedFeature as any).properties.id].country}</ModalHeader>\n                    <ModalBody>\n                    <ImageGallery\n                        items={countryImageMap[(clickedFeature as any).properties.id].imageData}\n                        showFullscreenButton={false}\n                        showPlayButton={false}\n                    />\n                    </ModalBody>\n                </Modal>\n                }\n            </div>\n        );\n    }\n};","import React from 'react';\nimport Main from '../layouts/Main'\nimport Helmet from 'react-helmet'\nimport Map from './Map'\n\nconst Travel:React.FC = () => (\n\n<Main>\n    <Helmet title=\"Travel\" />\n    <article className=\"post\" id=\"about-sections\">\n        <header>\n            <div className=\"title\">\n            <h2>Travel Map</h2>\n            <p>This is an interactive map of the countries I have visited, or hope to visit in the future!</p>\n            <p>Try clicking on one of the countries ive visited!</p>\n            </div>\n        </header>\n    </article>\n    <Map />\n</Main>\n);\n\nexport default Travel;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Helmet from 'react-helmet';\n\nconst PageNotFound:React.FC  = () => (\n  <div className=\"not-found\">\n    <Helmet title=\"404\" />\n    <h1>Page Not Found.</h1>\n    <p>Return to <Link to=\"/\">index</Link>.</p>\n  </div>\n);\n\nexport default PageNotFound;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/css/main.scss';\nimport App from './App';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Travel from './components/Travel';\nimport NotFound from './components/NotFound'\nimport * as serviceWorker from './serviceWorker';\nimport {\n    HashRouter as Router, Switch, Route,\n} from 'react-router-dom';\n\n\n\nReactDOM.render(\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/resume\" component={Resume} />\n        <Route path=\"/travel\" component={Travel} />\n        <Route component={NotFound} status={404} \n        />\n      </Switch>\n    </Router>,\n    document.getElementById('root'),\n  );\n  \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Profile_Pic.f3388a31.png\";"],"sourceRoot":""}